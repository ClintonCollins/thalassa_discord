// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: thalassa/v1/thalassa.proto

package thalassav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SongRequestsUpdateEvent_EventType int32

const (
	SongRequestsUpdateEvent_SONG_REQUEST_ADDED       SongRequestsUpdateEvent_EventType = 0
	SongRequestsUpdateEvent_SONG_REQUEST_PLAYING     SongRequestsUpdateEvent_EventType = 1
	SongRequestsUpdateEvent_SONG_REQUEST_FINISHED    SongRequestsUpdateEvent_EventType = 2
	SongRequestsUpdateEvent_SONG_REQUEST_SKIPPED     SongRequestsUpdateEvent_EventType = 3
	SongRequestsUpdateEvent_SONG_REQUEST_SKIPPED_ALL SongRequestsUpdateEvent_EventType = 4
)

// Enum value maps for SongRequestsUpdateEvent_EventType.
var (
	SongRequestsUpdateEvent_EventType_name = map[int32]string{
		0: "SONG_REQUEST_ADDED",
		1: "SONG_REQUEST_PLAYING",
		2: "SONG_REQUEST_FINISHED",
		3: "SONG_REQUEST_SKIPPED",
		4: "SONG_REQUEST_SKIPPED_ALL",
	}
	SongRequestsUpdateEvent_EventType_value = map[string]int32{
		"SONG_REQUEST_ADDED":       0,
		"SONG_REQUEST_PLAYING":     1,
		"SONG_REQUEST_FINISHED":    2,
		"SONG_REQUEST_SKIPPED":     3,
		"SONG_REQUEST_SKIPPED_ALL": 4,
	}
)

func (x SongRequestsUpdateEvent_EventType) Enum() *SongRequestsUpdateEvent_EventType {
	p := new(SongRequestsUpdateEvent_EventType)
	*p = x
	return p
}

func (x SongRequestsUpdateEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SongRequestsUpdateEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_thalassa_v1_thalassa_proto_enumTypes[0].Descriptor()
}

func (SongRequestsUpdateEvent_EventType) Type() protoreflect.EnumType {
	return &file_thalassa_v1_thalassa_proto_enumTypes[0]
}

func (x SongRequestsUpdateEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SongRequestsUpdateEvent_EventType.Descriptor instead.
func (SongRequestsUpdateEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{8, 0}
}

type Song struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongName          string `protobuf:"bytes,1,opt,name=song_name,json=songName,proto3" json:"song_name,omitempty"`
	Url               string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	IsStream          bool   `protobuf:"varint,3,opt,name=is_stream,json=isStream,proto3" json:"is_stream,omitempty"`
	Artist            string `protobuf:"bytes,4,opt,name=artist,proto3" json:"artist,omitempty"`
	Track             string `protobuf:"bytes,5,opt,name=track,proto3" json:"track,omitempty"`
	Album             string `protobuf:"bytes,6,opt,name=album,proto3" json:"album,omitempty"`
	ThumbnailUrl      string `protobuf:"bytes,7,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	DurationInSeconds uint32 `protobuf:"varint,8,opt,name=duration_in_seconds,json=durationInSeconds,proto3" json:"duration_in_seconds,omitempty"`
	Description       string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Platform          string `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`
	Id                string `protobuf:"bytes,11,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Song) Reset() {
	*x = Song{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thalassa_v1_thalassa_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_thalassa_v1_thalassa_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{0}
}

func (x *Song) GetSongName() string {
	if x != nil {
		return x.SongName
	}
	return ""
}

func (x *Song) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Song) GetIsStream() bool {
	if x != nil {
		return x.IsStream
	}
	return false
}

func (x *Song) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *Song) GetTrack() string {
	if x != nil {
		return x.Track
	}
	return ""
}

func (x *Song) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *Song) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *Song) GetDurationInSeconds() uint32 {
	if x != nil {
		return x.DurationInSeconds
	}
	return 0
}

func (x *Song) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Song) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Song) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongName          string                 `protobuf:"bytes,1,opt,name=song_name,json=songName,proto3" json:"song_name,omitempty"`
	UsernameAtTime    string                 `protobuf:"bytes,2,opt,name=username_at_time,json=usernameAtTime,proto3" json:"username_at_time,omitempty"`
	GuildNameAtTime   string                 `protobuf:"bytes,3,opt,name=guild_name_at_time,json=guildNameAtTime,proto3" json:"guild_name_at_time,omitempty"`
	RequestedAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=requested_at,json=requestedAt,proto3" json:"requested_at,omitempty"`
	Played            bool                   `protobuf:"varint,5,opt,name=played,proto3" json:"played,omitempty"`
	PlayedAt          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=played_at,json=playedAt,proto3" json:"played_at,omitempty"`
	Song              *Song                  `protobuf:"bytes,7,opt,name=song,proto3" json:"song,omitempty"`
	Id                int64                  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`
	RequestedByUserId string                 `protobuf:"bytes,9,opt,name=requested_by_user_id,json=requestedByUserId,proto3" json:"requested_by_user_id,omitempty"`
}

func (x *SongRequest) Reset() {
	*x = SongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thalassa_v1_thalassa_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongRequest) ProtoMessage() {}

func (x *SongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thalassa_v1_thalassa_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongRequest.ProtoReflect.Descriptor instead.
func (*SongRequest) Descriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{1}
}

func (x *SongRequest) GetSongName() string {
	if x != nil {
		return x.SongName
	}
	return ""
}

func (x *SongRequest) GetUsernameAtTime() string {
	if x != nil {
		return x.UsernameAtTime
	}
	return ""
}

func (x *SongRequest) GetGuildNameAtTime() string {
	if x != nil {
		return x.GuildNameAtTime
	}
	return ""
}

func (x *SongRequest) GetRequestedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestedAt
	}
	return nil
}

func (x *SongRequest) GetPlayed() bool {
	if x != nil {
		return x.Played
	}
	return false
}

func (x *SongRequest) GetPlayedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PlayedAt
	}
	return nil
}

func (x *SongRequest) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

func (x *SongRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SongRequest) GetRequestedByUserId() string {
	if x != nil {
		return x.RequestedByUserId
	}
	return ""
}

type GetSongRequestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId   string `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	OrderBy   string `protobuf:"bytes,2,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	OrderDesc bool   `protobuf:"varint,3,opt,name=order_desc,json=orderDesc,proto3" json:"order_desc,omitempty"`
	Limit     int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    int32  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetSongRequestsRequest) Reset() {
	*x = GetSongRequestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thalassa_v1_thalassa_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongRequestsRequest) ProtoMessage() {}

func (x *GetSongRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thalassa_v1_thalassa_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongRequestsRequest.ProtoReflect.Descriptor instead.
func (*GetSongRequestsRequest) Descriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{2}
}

func (x *GetSongRequestsRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *GetSongRequestsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetSongRequestsRequest) GetOrderDesc() bool {
	if x != nil {
		return x.OrderDesc
	}
	return false
}

func (x *GetSongRequestsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSongRequestsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetSongRequestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongRequests []*SongRequest `protobuf:"bytes,1,rep,name=song_requests,json=songRequests,proto3" json:"song_requests,omitempty"`
	Total        int32          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetSongRequestsResponse) Reset() {
	*x = GetSongRequestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thalassa_v1_thalassa_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongRequestsResponse) ProtoMessage() {}

func (x *GetSongRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thalassa_v1_thalassa_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongRequestsResponse.ProtoReflect.Descriptor instead.
func (*GetSongRequestsResponse) Descriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{3}
}

func (x *GetSongRequestsResponse) GetSongRequests() []*SongRequest {
	if x != nil {
		return x.SongRequests
	}
	return nil
}

func (x *GetSongRequestsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AddSongRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId string `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Url     string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *AddSongRequestRequest) Reset() {
	*x = AddSongRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thalassa_v1_thalassa_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSongRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSongRequestRequest) ProtoMessage() {}

func (x *AddSongRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thalassa_v1_thalassa_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSongRequestRequest.ProtoReflect.Descriptor instead.
func (*AddSongRequestRequest) Descriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{4}
}

func (x *AddSongRequestRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *AddSongRequestRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type AddSongRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongRequest *SongRequest `protobuf:"bytes,1,opt,name=song_request,json=songRequest,proto3" json:"song_request,omitempty"`
}

func (x *AddSongRequestResponse) Reset() {
	*x = AddSongRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thalassa_v1_thalassa_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSongRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSongRequestResponse) ProtoMessage() {}

func (x *AddSongRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thalassa_v1_thalassa_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSongRequestResponse.ProtoReflect.Descriptor instead.
func (*AddSongRequestResponse) Descriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{5}
}

func (x *AddSongRequestResponse) GetSongRequest() *SongRequest {
	if x != nil {
		return x.SongRequest
	}
	return nil
}

type GetCurrentSongPlayingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId string `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *GetCurrentSongPlayingRequest) Reset() {
	*x = GetCurrentSongPlayingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thalassa_v1_thalassa_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentSongPlayingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSongPlayingRequest) ProtoMessage() {}

func (x *GetCurrentSongPlayingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thalassa_v1_thalassa_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSongPlayingRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentSongPlayingRequest) Descriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{6}
}

func (x *GetCurrentSongPlayingRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

type GetCurrentSongPlayingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=requested_at,json=requestedAt,proto3" json:"requested_at,omitempty"`
	StartedAt   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	Song        *Song                  `protobuf:"bytes,3,opt,name=song,proto3" json:"song,omitempty"`
	RequestedBy string                 `protobuf:"bytes,4,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
	SongRequest *SongRequest           `protobuf:"bytes,5,opt,name=song_request,json=songRequest,proto3" json:"song_request,omitempty"`
}

func (x *GetCurrentSongPlayingResponse) Reset() {
	*x = GetCurrentSongPlayingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thalassa_v1_thalassa_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentSongPlayingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSongPlayingResponse) ProtoMessage() {}

func (x *GetCurrentSongPlayingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thalassa_v1_thalassa_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSongPlayingResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentSongPlayingResponse) Descriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{7}
}

func (x *GetCurrentSongPlayingResponse) GetRequestedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestedAt
	}
	return nil
}

func (x *GetCurrentSongPlayingResponse) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *GetCurrentSongPlayingResponse) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

func (x *GetCurrentSongPlayingResponse) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

func (x *GetCurrentSongPlayingResponse) GetSongRequest() *SongRequest {
	if x != nil {
		return x.SongRequest
	}
	return nil
}

type SongRequestsUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType   SongRequestsUpdateEvent_EventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=thalassa.v1.SongRequestsUpdateEvent_EventType" json:"event_type,omitempty"`
	SongRequest *SongRequest                      `protobuf:"bytes,2,opt,name=song_request,json=songRequest,proto3" json:"song_request,omitempty"`
}

func (x *SongRequestsUpdateEvent) Reset() {
	*x = SongRequestsUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thalassa_v1_thalassa_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SongRequestsUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongRequestsUpdateEvent) ProtoMessage() {}

func (x *SongRequestsUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_thalassa_v1_thalassa_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongRequestsUpdateEvent.ProtoReflect.Descriptor instead.
func (*SongRequestsUpdateEvent) Descriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{8}
}

func (x *SongRequestsUpdateEvent) GetEventType() SongRequestsUpdateEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return SongRequestsUpdateEvent_SONG_REQUEST_ADDED
}

func (x *SongRequestsUpdateEvent) GetSongRequest() *SongRequest {
	if x != nil {
		return x.SongRequest
	}
	return nil
}

type SongRequestsUpdateStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId string `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *SongRequestsUpdateStreamRequest) Reset() {
	*x = SongRequestsUpdateStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thalassa_v1_thalassa_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SongRequestsUpdateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongRequestsUpdateStreamRequest) ProtoMessage() {}

func (x *SongRequestsUpdateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thalassa_v1_thalassa_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongRequestsUpdateStreamRequest.ProtoReflect.Descriptor instead.
func (*SongRequestsUpdateStreamRequest) Descriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{9}
}

func (x *SongRequestsUpdateStreamRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

type SongRequestsUpdateStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *SongRequestsUpdateEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *SongRequestsUpdateStreamResponse) Reset() {
	*x = SongRequestsUpdateStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thalassa_v1_thalassa_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SongRequestsUpdateStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongRequestsUpdateStreamResponse) ProtoMessage() {}

func (x *SongRequestsUpdateStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thalassa_v1_thalassa_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongRequestsUpdateStreamResponse.ProtoReflect.Descriptor instead.
func (*SongRequestsUpdateStreamResponse) Descriptor() ([]byte, []int) {
	return file_thalassa_v1_thalassa_proto_rawDescGZIP(), []int{10}
}

func (x *SongRequestsUpdateStreamResponse) GetEvent() *SongRequestsUpdateEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

var File_thalassa_v1_thalassa_proto protoreflect.FileDescriptor

var file_thalassa_v1_thalassa_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x74, 0x68, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x68,
	0x61, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x74, 0x68,
	0x61, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x02, 0x0a, 0x04, 0x53,
	0x6f, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf9, 0x02, 0x0a, 0x0b, 0x53, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x6e, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x12, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x64, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6f,
	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x68, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x04, 0x73, 0x6f, 0x6e,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2f, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x6e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x73,
	0x6f, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x68, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x6f,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x44, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x55, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x68, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0b, 0x73, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x39, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x50,
	0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0xa0, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6f, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x68, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x04, 0x73, 0x6f, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3b,
	0x0a, 0x0c, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x68, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b,
	0x73, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb8, 0x02, 0x0a, 0x17,
	0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x74, 0x68,
	0x61, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74,
	0x68, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x73, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x4f, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x5f, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x4f, 0x4e,
	0x47, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x4f, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x53, 0x4f, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53,
	0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x4f, 0x4e, 0x47,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44,
	0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x04, 0x22, 0x3c, 0x0a, 0x1f, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x20, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x68, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x32, 0xda, 0x01, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x74, 0x68, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x68,
	0x61, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x6f, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x2e, 0x74, 0x68, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x68, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6f,
	0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x30, 0x5a, 0x2e, 0x74, 0x68, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x68, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x68, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x61, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_thalassa_v1_thalassa_proto_rawDescOnce sync.Once
	file_thalassa_v1_thalassa_proto_rawDescData = file_thalassa_v1_thalassa_proto_rawDesc
)

func file_thalassa_v1_thalassa_proto_rawDescGZIP() []byte {
	file_thalassa_v1_thalassa_proto_rawDescOnce.Do(func() {
		file_thalassa_v1_thalassa_proto_rawDescData = protoimpl.X.CompressGZIP(file_thalassa_v1_thalassa_proto_rawDescData)
	})
	return file_thalassa_v1_thalassa_proto_rawDescData
}

var file_thalassa_v1_thalassa_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_thalassa_v1_thalassa_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_thalassa_v1_thalassa_proto_goTypes = []interface{}{
	(SongRequestsUpdateEvent_EventType)(0),   // 0: thalassa.v1.SongRequestsUpdateEvent.EventType
	(*Song)(nil),                             // 1: thalassa.v1.Song
	(*SongRequest)(nil),                      // 2: thalassa.v1.SongRequest
	(*GetSongRequestsRequest)(nil),           // 3: thalassa.v1.GetSongRequestsRequest
	(*GetSongRequestsResponse)(nil),          // 4: thalassa.v1.GetSongRequestsResponse
	(*AddSongRequestRequest)(nil),            // 5: thalassa.v1.AddSongRequestRequest
	(*AddSongRequestResponse)(nil),           // 6: thalassa.v1.AddSongRequestResponse
	(*GetCurrentSongPlayingRequest)(nil),     // 7: thalassa.v1.GetCurrentSongPlayingRequest
	(*GetCurrentSongPlayingResponse)(nil),    // 8: thalassa.v1.GetCurrentSongPlayingResponse
	(*SongRequestsUpdateEvent)(nil),          // 9: thalassa.v1.SongRequestsUpdateEvent
	(*SongRequestsUpdateStreamRequest)(nil),  // 10: thalassa.v1.SongRequestsUpdateStreamRequest
	(*SongRequestsUpdateStreamResponse)(nil), // 11: thalassa.v1.SongRequestsUpdateStreamResponse
	(*timestamppb.Timestamp)(nil),            // 12: google.protobuf.Timestamp
}
var file_thalassa_v1_thalassa_proto_depIdxs = []int32{
	12, // 0: thalassa.v1.SongRequest.requested_at:type_name -> google.protobuf.Timestamp
	12, // 1: thalassa.v1.SongRequest.played_at:type_name -> google.protobuf.Timestamp
	1,  // 2: thalassa.v1.SongRequest.song:type_name -> thalassa.v1.Song
	2,  // 3: thalassa.v1.GetSongRequestsResponse.song_requests:type_name -> thalassa.v1.SongRequest
	2,  // 4: thalassa.v1.AddSongRequestResponse.song_request:type_name -> thalassa.v1.SongRequest
	12, // 5: thalassa.v1.GetCurrentSongPlayingResponse.requested_at:type_name -> google.protobuf.Timestamp
	12, // 6: thalassa.v1.GetCurrentSongPlayingResponse.started_at:type_name -> google.protobuf.Timestamp
	1,  // 7: thalassa.v1.GetCurrentSongPlayingResponse.song:type_name -> thalassa.v1.Song
	2,  // 8: thalassa.v1.GetCurrentSongPlayingResponse.song_request:type_name -> thalassa.v1.SongRequest
	0,  // 9: thalassa.v1.SongRequestsUpdateEvent.event_type:type_name -> thalassa.v1.SongRequestsUpdateEvent.EventType
	2,  // 10: thalassa.v1.SongRequestsUpdateEvent.song_request:type_name -> thalassa.v1.SongRequest
	9,  // 11: thalassa.v1.SongRequestsUpdateStreamResponse.event:type_name -> thalassa.v1.SongRequestsUpdateEvent
	3,  // 12: thalassa.v1.APIService.GetSongRequests:input_type -> thalassa.v1.GetSongRequestsRequest
	7,  // 13: thalassa.v1.APIService.GetCurrentSongPlaying:input_type -> thalassa.v1.GetCurrentSongPlayingRequest
	4,  // 14: thalassa.v1.APIService.GetSongRequests:output_type -> thalassa.v1.GetSongRequestsResponse
	8,  // 15: thalassa.v1.APIService.GetCurrentSongPlaying:output_type -> thalassa.v1.GetCurrentSongPlayingResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_thalassa_v1_thalassa_proto_init() }
func file_thalassa_v1_thalassa_proto_init() {
	if File_thalassa_v1_thalassa_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_thalassa_v1_thalassa_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Song); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thalassa_v1_thalassa_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thalassa_v1_thalassa_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongRequestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thalassa_v1_thalassa_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongRequestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thalassa_v1_thalassa_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSongRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thalassa_v1_thalassa_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSongRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thalassa_v1_thalassa_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentSongPlayingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thalassa_v1_thalassa_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentSongPlayingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thalassa_v1_thalassa_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SongRequestsUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thalassa_v1_thalassa_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SongRequestsUpdateStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thalassa_v1_thalassa_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SongRequestsUpdateStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_thalassa_v1_thalassa_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_thalassa_v1_thalassa_proto_goTypes,
		DependencyIndexes: file_thalassa_v1_thalassa_proto_depIdxs,
		EnumInfos:         file_thalassa_v1_thalassa_proto_enumTypes,
		MessageInfos:      file_thalassa_v1_thalassa_proto_msgTypes,
	}.Build()
	File_thalassa_v1_thalassa_proto = out.File
	file_thalassa_v1_thalassa_proto_rawDesc = nil
	file_thalassa_v1_thalassa_proto_goTypes = nil
	file_thalassa_v1_thalassa_proto_depIdxs = nil
}
